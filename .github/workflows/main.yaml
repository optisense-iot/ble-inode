name: CI

on:
  push:
    branches: ["**"]
    tags: [v*]
  pull_request:
    branches: ["**"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 17

      - uses: coursier/cache-action@v5

      - name: Run tests
        run: ./mill _.test

      - name: Check format
        run: ./mill mill.scalalib.scalafmt.ScalafmtModule/checkFormatAll

      - name: Build docker image
        run: ./mill server.docker.build

      - name: Set outputs
        id: version
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Tag docker image
        run: |
          docker tag server ghrc.io/optisense-iot/ble-inode:${{ steps.version.outputs.sha_short }}
          docker tag server ghrc.io/optisense-iot/ble-inode:latest

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Push docker imageo
        run: |
          docker push ghrc.io/optisense-iot/ble-inode:${{ steps.version.outputs.sha_short }}
          docker push ghrc.io/optisense-iot/ble-inode:latest

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
